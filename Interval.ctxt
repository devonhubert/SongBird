#BlueJ class context
comment0.params=
comment0.target=Interval()
comment0.text=\n\ The\ default\ constructor,\ which\ sets\ the\ Interval's\ distance\ to\ 0,\ quality\ to\ "Perfect,"\n\ degreeValue\ to\ 1,\ and\ degreeName\ to\ "Unison"\n
comment1.params=distance
comment1.target=Interval(int)
comment1.text=\n\ The\ constructor\ that\ accepts\ the\ raw\ distance\ between\ two\ Notes,\ and\ sets\ \n\ it\ as\ the\ Interval's\ distance\n\ @param\ distance\ The\ raw\ distance\ between\ two\ Notes\n
comment10.params=
comment10.target=java.lang.String\ getQuality()
comment10.text=\n\ @return\ the\ quality\ that\ describes\ the\ interval\ ("Major,"\ "Minor,"\ etc.)\ (String)\n
comment11.params=
comment11.target=int\ getDegreeValue()
comment11.text=\n\ @return\ the\ value\ of\ the\ Interval's\ degree\ type\ (1\ for\ "unison,"\ 8\ for\ "octave,"\ etc.)\ (int)\n
comment12.params=
comment12.target=java.lang.String\ getDegreeName()
comment12.text=\n\ @return\ the\ name\ of\ the\ Interval's\ degree\ type\ ("Unison,"\ "Third,"\ "Octave,"\ etc.)\ (String)\n
comment13.params=distance
comment13.target=void\ setDistance(int)
comment13.text=\n\ Sets\ the\ Interval's\ raw\ distance\ value\ \n\ @param\ distance\ The\ raw\ distance\ that\ the\ Interval\ represents\ (int)\n
comment14.params=quality
comment14.target=void\ setQuality(java.lang.String)
comment14.text=\n\ Sets\ the\ Interval's\ quality\ value\n\ @param\ quality\ The\ Interval's\ quality\ ("Perfect,"\ "minor,"\ "diminished,"\ etc.)\ (String)\n
comment15.params=degreeValue
comment15.target=void\ setdegreeValue(int)
comment15.text=\n\ Sets\ the\ Interval's\ degree\ value\n\ @param\ degreeValue\ The\ Interval's\ degreeValue\ (1\ \=\ "unison,"\ 8\ \=\ "octave,"\ etc.)\ (int)\n
comment16.params=degreeName
comment16.target=void\ setdegreeName(java.lang.String)
comment16.text=\n\ Sets\ the\ Interval's\ degree\ Name\n\ @param\ degreeName\ The\ Interval's\ degreeName\ ("Unison,"\ "Third,"\ "Octave,"\ etc.)\ (int)\n
comment17.params=quality\ degreeValue
comment17.target=int\ calculateDistance(java.lang.String,\ int)
comment17.text=\n\ Calculates\ the\ Interval's\ raw\ distance,\ based\ on\ it's\ quality\ and\ degreeValue\n\ @param\ quality\ The\ Interval's\ quality\ ("Perfect,"\ "minor,"\ "diminished,"\ etc.)\ (String)\n\ @param\ degreeValue\ The\ Interval's\ degreeValue\ (1\ \=\ "unison,"\ 8\ \=\ "octave,"\ etc.)\ (int)\n
comment18.params=degreeValue\ distance
comment18.target=java.lang.String\ calculateQuality(int,\ int)
comment18.text=\n\ Calculates\ the\ Interval's\ quality\ type,\ based\ on\ it's\ degreeValue\ and\ raw\ distance\n\ @param\ degreeValue\ The\ Interval's\ degreeValue\ (1\ \=\ "unison,"\ 8\ \=\ "octave,"\ etc.)\ (int)\n\ @param\ distance\ The\ raw\ distance\ that\ the\ Interval\ represents\ (int)\n
comment19.params=distance\ quality
comment19.target=int\ calculatedegreeValue(int,\ java.lang.String)
comment19.text=\n\ Calculates\ the\ Interval's\ degree\ type,\ based\ on\ it's\ raw\ distance\ and\ quality\ type\n\ @param\ distance\ The\ raw\ distance\ that\ the\ Interval\ represents\ (int)\n\ @param\ quality\ The\ Interval's\ quality\ ("Perfect,"\ "minor,"\ "diminished,"\ etc.)\ (String)\n
comment2.params=firstNote\ secondNote
comment2.target=Interval(Note,\ Note)
comment2.text=\n\ The\ constructor\ that\ accepts\ two\ Notes,\ calculates\ their\ raw\ distance,\ and\ \n\ sets\ this\ distance\ as\ the\ Interval's\ distance\n\ @param\ firstNote\ The\ first\ Note\n\ @param\ secondNote\ The\ second\ Note\n
comment20.params=distance
comment20.target=java.lang.String\ computePossible(int)
comment20.text=\n\ Calculates\ all\ possible\ interval\ types\ that\ an\ Interval\ of\ given\ distance\ could\ be\n\ @return\ a\ String\ representation\ of\ the\ Interval's\ quality\ and\ degreeName\ (String)\n
comment21.params=rootName\ degreeValue
comment21.target=char\ findLetterName(java.lang.String,\ int)
comment22.params=degreeValue
comment22.target=java.lang.String\ findDegreeName(int)
comment22.text=\n\ Finds\ an\ Interval's\ degreeName\ based\ on\ its\ degreeValue\n\ @return\ the\ Interval's\ degreeName\ (String)\n
comment23.params=
comment23.target=java.lang.String\ toString()
comment23.text=\n\ A\ String\ representation\ of\ the\ Interval\ object,\ made\ up\ of\ its\ quality\ and\ degreeName\n
comment3.params=quality\ degreeValue
comment3.target=Interval(java.lang.String,\ int)
comment3.text=\n\ The\ constructor\ that\ accepts\ the\ Interval's\ quality\ and\ degreeValue,\ and\ \n\ calculates\ and\ sets\ the\ remaining\ variables\ accordingly\n\ @param\ quality\ The\ Interval's\ quality\ ("Perfect,"\ "minor,"\ "diminished,"\ etc.)\ (String)\n\ @param\ degreeValue\ The\ Interval's\ degreeValue\ (third,\ fourth,\ ninth,\ octave,\ etc.)\ (int)\n
comment4.params=distance\ quality
comment4.target=Interval(int,\ java.lang.String)
comment4.text=\n\ The\ constructor\ that\ accepts\ the\ Interval's\ distance\ and\ quality,\ and\ \n\ calculates\ and\ sets\ the\ remaining\ variables\ accordingly\n\ @param\ distance\ The\ raw\ distance\ that\ the\ Interval\ represents\ (int)\n\ @param\ quality\ The\ Interval's\ quality\ ("Perfect,"\ "minor,"\ "diminished,"\ etc.)\ (String)\n
comment5.params=degreeValue\ distance
comment5.target=Interval(int,\ int)
comment5.text=\n\ The\ constructor\ that\ accepts\ the\ Interval's\ degreeValue\ and\ distance,\ and\ \n\ calculates\ and\ sets\ the\ remaining\ variables\ accordingly\n\ @param\ degreeValue\ The\ Interval's\ degreeValue\ (third,\ fourth,\ ninth,\ octave,\ etc.)\ (int)\n\ @param\ distance\ The\ raw\ distance\ that\ the\ Interval\ represents\ (int)\n
comment6.params=firstNote\ secondNote\ quality
comment6.target=Interval(Note,\ Note,\ java.lang.String)
comment6.text=\n\ The\ constructor\ that\ accepts\ two\ Notes,\ between\ which\ the\ Interval\ exists,\ \n\ as\ well\ as\ the\ desired\ quality\ of\ the\ interval,\ which\ are\ used\ to\ \n\ calculate\ and\ set\ the\ remaining\ variables\ \n\ @param\ firstNote\ The\ first\ Note\n\ @param\ secondNote\ The\ second\ Note\n\ @param\ quality\ The\ Interval's\ quality\ ("Perfect,"\ "minor,"\ "diminished,"\ etc.)\ (String)\n
comment7.params=firstNote\ secondNote\ degreeValue
comment7.target=Interval(Note,\ Note,\ int)
comment7.text=\n\ The\ constructor\ that\ accepts\ two\ Notes,\ between\ which\ the\ Interval\ exists,\ \n\ as\ well\ as\ the\ desired\ degreeValue\ of\ the\ interval,\ which\ are\ used\ to\ \n\ calculate\ and\ set\ the\ remaining\ variables\ \n\ @param\ firstNote\ The\ first\ Note\n\ @param\ secondNote\ The\ second\ Note\n\ @param\ degreeValue\ The\ Interval's\ degreeValue\ (third,\ fourth,\ ninth,\ octave,\ etc.)\ (int)\n
comment8.params=distance\ quality\ degreeValue
comment8.target=Interval(int,\ java.lang.String,\ int)
comment8.text=\n\ The\ constructor\ where\ all\ information\ about\ the\ Interval\ is\ known,\ setting\ the\ Interval's\n\ variables\ based\ on\ the\ parameter\ input\n\ @param\ distance\ The\ raw\ distance\ that\ the\ Interval\ represents\ (int)\n\ @param\ quality\ The\ Interval's\ quality\ ("Perfect,"\ "minor,"\ "diminished,"\ etc.)\ (String)\n\ @param\ degreeValue\ The\ Interval's\ degreeValue\ (1\ \=\ "unison,"\ 8\ \=\ "octave,"\ etc.)\ (int)\n
comment9.params=
comment9.target=int\ getDistance()
comment9.text=\n\ @return\ the\ raw\ distance\ that\ is\ the\ essence\ of\ the\ Interval\ object\ (int)\n
numComments=24
