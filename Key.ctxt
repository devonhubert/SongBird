#BlueJ class context
comment0.params=
comment0.target=Key()
comment0.text=\n\ The\ default\ constructor,\ which\ sets\ the\ Key\ to\ C\ Major\n
comment1.params=keyValue\ isMajor
comment1.target=Key(int,\ boolean)
comment1.text=\n\ The\ constructor\ that\ accepts\ a\ keyValue\ (a\ number\ representing\n\ the\ number\ of\ sharps/flats\ in\ the\ Key),\ and\ a\ variable\ for\n\ whether\ or\ not\ it\ is\ a\ Major\ or\ minor\ key\n\ \n\ @param\ keyValue\ The\ integer\ value\ of\ the\ Key,\ representing\ the\n\ totals\ number\ of\ sharps\ and\ flats\ int\ the\ Key\ (each\ flat\ subtracts\n\ 1\ from\ the\ value,\ and\ each\ flat\ adds\ 1)\n\ @param\ isMajor\ A\ boolean\ value\ that\ returns\ true\ if\ the\ Key\ \n\ is\ Major\n
comment10.params=num
comment10.target=void\ addFlats(int)
comment10.text=\n\ Adds\ flats\ to\ the\ Key\ in\ the\ order\ designated\ by\ the\ circle\ of\n\ fifths,\ and\ adjusts\ the\ Key's\ keyValue\ accordingly\n\ @param\ num\ The\ number\ of\ flats\ to\ add\n
comment11.params=num
comment11.target=void\ addSharps(int)
comment11.text=\n\ Adds\ sharps\ to\ the\ Key\ in\ the\ order\ designated\ by\ the\ circle\ of\n\ fifths,\ and\ adjusts\ the\ Key's\ keyValue\ accordingly\n\ @param\ num\ The\ number\ of\ sharps\ to\ add\n
comment12.params=scale\ rootName
comment12.target=Note[]\ arrangeScale(Note[],\ java.lang.String)
comment12.text=\n\ Arranges\ the\ set\ of\ notes\ in\ the\ key\ into\ a\ scale,\ starting\ on\ the\n\ given\ root.\ This\ can\ also\ be\ used\ to\ generate\ "modes,"\ and\ other\n\ modal\ scales\n\ \n\ @param\ scale\ An\ array\ of\ Notes\ to\ be\ re-arranged\ into\ the\ new\ scale\n\ @param\ rootName\ The\ name\ of\ the\ desired\ root\ (starting\ note),\ around\n\ which\ the\ new\ scale\ will\ be\ based\n\ @return\ the\ new\ scale,\ starting\ on\ the\ given\ root\n
comment13.params=scaleType
comment13.target=Note[]\ turnToParallelMode(java.lang.String)
comment13.text=\n\ Finds\ the\ mode\ of\ given\ scaleType\ ("Ionian",\ "Dorian",\ etc.)\ \n\ with\ the\ same\ root\ name\ as\ the\ Major\ scale\ based\ off\ of\ the\ \n\ current\ Key\n\ @param\ scaleType\ The\ type\ of\ scale\ desired\ ("Ionian",\ "Dorian",\ etc.)\ \n\ @return\ an\ array\ of\ Notes\ in\ the\ new\ mode\n
comment14.params=keyValue
comment14.target=java.lang.String\ findMajorKeyName(int)
comment14.text=\n\ Finds\ the\ Key's\ name,\ given\ that\ the\ Key\ is\ Major\n\ @param\ keyValue\ The\ integer\ value\ that\ represents\ the\ desired\ Key\n\ @return\ the\ String\ representing\ the\ resulting\ Major\ key\n
comment15.params=keyValue
comment15.target=java.lang.String\ findMinorKeyName(int)
comment15.text=\n\ Finds\ the\ Key's\ name,\ given\ that\ the\ Key\ is\ minor\n\ @param\ keyValue\ The\ integer\ value\ that\ represents\ the\ desired\ Key\n\ @return\ the\ String\ representing\ the\ resulting\ minor\ key\n
comment16.params=chordList
comment16.target=java.util.ArrayList\ analyze(java.util.ArrayList)
comment16.text=\n\ Analyzes\ the\ given\ list\ of\ Chords\ by\ finding\ each\ Chord's\ Note\ name\n\ @param\ chordList\ The\ list\ of\ Chords\ to\ be\ analyzed\n\ @return\ the\ analyzed\ list\n
comment17.params=
comment17.target=java.lang.String\ toString()
comment17.text=\n\ @return\ a\ String\ representation\ of\ the\ given\ Key\ (String)\n
comment2.params=keyName\ isMajor
comment2.target=Key(java.lang.String,\ boolean)
comment3.params=
comment3.target=java.lang.String\ getKeyName()
comment3.text=\n\ @return\ the\ Key's\ name\ (String)\n
comment4.params=
comment4.target=int\ getKeyValue()
comment4.text=\n\ @return\ the\ Key's\ value\ (int)\n
comment5.params=
comment5.target=Note[]\ getScaleSet()
comment5.text=\n\ @return\ the\ Key's\ scaleSet\ (Note[])\n
comment6.params=keyName
comment6.target=void\ setKeyName(java.lang.String)
comment6.text=\n\ Sets\ the\ Key's\ name\ \n\ @param\ keyName\ The\ Key's\ name\ (String)\n
comment7.params=scaleSet
comment7.target=void\ setScaleSet(Note[])
comment7.text=\n\ Sets\ the\ Key's\ scaleSet\ \n\ @param\ scaleSet\ The\ Key's\ scaleSet\ (Note[])\n
comment8.params=keyValue
comment8.target=void\ setKeyValue(int)
comment8.text=\n\ Sets\ the\ Key's\ keyValue\n\ @param\ keyValue\ The\ Key's\ value\ (int)\n
comment9.params=keyName
comment9.target=int\ findMajorKeyValue(java.lang.String)
numComments=18
